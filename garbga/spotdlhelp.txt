usage: spotdl [-h]
              [--audio [{youtube,youtube-music,soundcloud,bandcamp,piped} ...]]
              [--lyrics [{genius,musixmatch,azlyrics,synced} ...]]
              [--genius-access-token GENIUS_TOKEN] [--config]
              [--search-query SEARCH_QUERY] [--dont-filter-results]
              [--album-type {album,single}] [--only-verified-results]
              [--user-auth] [--client-id CLIENT_ID]
              [--client-secret CLIENT_SECRET] [--auth-token AUTH_TOKEN]
              [--cache-path CACHE_PATH] [--no-cache]
              [--max-retries MAX_RETRIES] [--headless] [--use-cache-file]
              [--ffmpeg FFMPEG] [--threads THREADS]
              [--bitrate {auto,disable,8k,16k,24k,32k,40k,48k,64k,80k,96k,112k,128k,160k,192k,224k,256k,320k,0,1,2,3,4,5,6,7,8,9}]
              [--ffmpeg-args FFMPEG_ARGS]
              [--format {mp3,flac,ogg,opus,m4a,wav}] [--save-file SAVE_FILE]
              [--preload] [--output OUTPUT] [--m3u [M3U]]
              [--cookie-file COOKIE_FILE] [--overwrite {force,skip,metadata}]
              [--restrict [{strict,none,ascii}]] [--print-errors]
              [--save-errors SAVE_ERRORS] [--sponsor-block]
              [--archive ARCHIVE] [--playlist-numbering]
              [--playlist-retain-track-cover] [--scan-for-songs]
              [--fetch-albums] [--id3-separator ID3_SEPARATOR] [--ytm-data]
              [--add-unavailable] [--generate-lrc] [--force-update-metadata]
              [--sync-without-deleting]
              [--max-filename-length MAX_FILENAME_LENGTH]
              [--yt-dlp-args YT_DLP_ARGS]
              [--detect-formats [{mp3,flac,ogg,opus,m4a,wav} ...]]
              [--redownload] [--skip-album-art]
              [--ignore-albums [IGNORE_ALBUMS ...]] [--skip-explicit]
              [--proxy PROXY] [--create-skip-file] [--respect-skip-file]
              [--sync-remove-lrc] [--host HOST] [--port PORT] [--keep-alive]
              [--allowed-origins [ALLOWED_ORIGINS ...]] [--web-use-output-dir]
              [--keep-sessions] [--force-update-gui]
              [--web-gui-repo WEB_GUI_REPO]
              [--web-gui-location WEB_GUI_LOCATION] [--enable-tls]
              [--cert-file CERT_FILE] [--key-file KEY_FILE]
              [--ca-file CA_FILE]
              [--log-level {CRITICAL,FATAL,ERROR,WARN,WARNING,INFO,MATCH,DEBUG,NOTSET}]
              [--simple-tui] [--log-format LOG_FORMAT] [--download-ffmpeg]
              [--generate-config] [--check-for-updates] [--profile]
              [--version]
              [{download,save,web,sync,meta,url}] query [query ...]

Download your Spotify playlists and songs along with album art and metadata

options:
  -h, --help            show this help message and exit

Main options:
  {download,save,web,sync,meta,url}
                        The operation to perform.
                        download: Download the songs to the disk and embed metadata.
                        save: Saves the songs metadata to a file for further use.
                        web: Starts a web interface to simplify the download process.
                        sync: Removes songs that are no longer present, downloads new ones
                        meta: Update your audio files with metadata
                        url: Get the download URL for songs
                        
  query                 Spotify/YouTube URL for a song/playlist/album/artist/etc. to download.
                        
                        For album/playlist/artist searching, include 'album:', 'playlist:', 'artist:' 
                        (ie. 'album:the album name' you can mix these options to get more accurate results).
                        
                        To download liked songs use 'saved' as the query, to download all user playlists
                        use 'all-user-playlists, to download playlists that the user has created
                        use 'all-saved-playlists', to download all user liked playlists
                        use 'all-user-followed-artists', to download all user saved albums use 'all-user-saved-albums' 
                        
                        For manual audio matching, you can use the format 'YouTubeURL|SpotifyURL'
                        You can only use album/playlist/tracks urls when downloading/matching youtube urls.
                        When using youtube url without spotify url, you won't be able to use `--fetch-albums` option.
                        
  --audio [{youtube,youtube-music,soundcloud,bandcamp,piped} ...]
                        The audio provider to use. You can provide more than
                        one for fallback.
  --lyrics [{genius,musixmatch,azlyrics,synced} ...]
                        The lyrics provider to use. You can provide more than
                        one for fallback. Synced lyrics might not work
                        correctly with some music players. For such cases it's
                        better to use `--generate-lrc` option.
  --genius-access-token GENIUS_TOKEN
                        Lets you choose your own Genius access token.
  --config              Use the config file to download songs. It's located
                        under C:\Users\user\.spotdl\config.json or
                        ~/.spotdl/config.json under linux
  --search-query SEARCH_QUERY
                        The search query to use, available variables: {title},
                        {artists}, {artist}, {album}, {album-artist}, {genre},
                        {disc-number}, {disc-count}, {duration}, {year},
                        {original-date}, {track-number}, {tracks-count},
                        {isrc}, {track-id}, {publisher}, {list-length}, {list-
                        position}, {list-name}, {output-ext}
  --dont-filter-results
                        Disable filtering results.
  --album-type {album,single}
                        Type of the album to search for. (album, single)
  --only-verified-results
                        Use only verified results. (Not all providers support
                        this)

Spotify options:
  --user-auth           Login to Spotify using OAuth.
  --client-id CLIENT_ID
                        The client id to use when logging in to Spotify.
  --client-secret CLIENT_SECRET
                        The client secret to use when logging in to Spotify.
  --auth-token AUTH_TOKEN
                        The authorization token to use directly to log in to
                        Spotify.
  --cache-path CACHE_PATH
                        The path where spotipy cache file will be stored.
  --no-cache            Disable caching (both requests and token).
  --max-retries MAX_RETRIES
                        The maximum number of retries to perform when getting
                        metadata.
  --headless            Run in headless mode.
  --use-cache-file      Use the cache file to get metadata. It's located under
                        C:\Users\user\.spotdl\.spotify_cache or
                        ~/.spotdl/.spotify_cache under linux. It only caches
                        tracks and gets updated whenever spotDL gets metadata
                        from Spotify. (It may provide outdated metadata use
                        with caution)

FFmpeg options:
  --ffmpeg FFMPEG       The ffmpeg executable to use.
  --threads THREADS     The number of threads to use when downloading songs.
  --bitrate {auto,disable,8k,16k,24k,32k,40k,48k,64k,80k,96k,112k,128k,160k,192k,224k,256k,320k,0,1,2,3,4,5,6,7,8,9}
                        The constant/variable bitrate to use for the output
                        file. Values from 0 to 9 are variable bitrates. Auto
                        will use the bitrate of the original file. Disable
                        will disable the bitrate option. (In case of m4a and
                        opus files, auto and disable will skip the conversion)
  --ffmpeg-args FFMPEG_ARGS
                        Additional ffmpeg arguments passed as a string.

Output options:
  --format {mp3,flac,ogg,opus,m4a,wav}
                        The format to download the song in.
  --save-file SAVE_FILE
                        The file to save/load the songs data from/to. It has
                        to end with .spotdl. If combined with the download
                        operation, it will save the songs data to the file.
                        Required for save/sync (use - to print to stdout when
                        using save).
  --preload             Preload the download url to speed up the download
                        process.
  --output OUTPUT       Specify the downloaded file name format, available
                        variables: {title}, {artists}, {artist}, {album},
                        {album-artist}, {genre}, {disc-number}, {disc-count},
                        {duration}, {year}, {original-date}, {track-number},
                        {tracks-count}, {isrc}, {track-id}, {publisher},
                        {list-length}, {list-position}, {list-name}, {output-
                        ext}
  --m3u [M3U]           Name of the m3u file to save the songs to. Defaults to
                        {list[0]}.m3u8 If you want to generate a m3u for each
                        list in the query use {list}, If you want to generate
                        a m3u file based on the first list in the query use
                        {list[0]}, (0 is the first list in the query, 1 is the
                        second, etc. songs don't count towards the list
                        number)
  --cookie-file COOKIE_FILE
                        Path to cookies file.
  --overwrite {force,skip,metadata}
                        How to handle existing/duplicate files. (When combined
                        with --scan-for-songs force will remove all
                        duplicates, and metadata will only apply metadata to
                        the latest song and will remove the rest. )
  --restrict [{strict,none,ascii}]
                        Restrict filenames to a sanitized set of characters
                        for better compatibility
  --print-errors        Print errors (wrong songs, failed downloads etc) on
                        exit, useful for long playlist
  --save-errors SAVE_ERRORS
                        Save errors (wrong songs, failed downloads etc) to a
                        file
  --sponsor-block       Use the sponsor block to download songs from yt/ytm.
  --archive ARCHIVE     Specify the file name for an archive of already
                        downloaded songs
  --playlist-numbering  Sets each track in a playlist to have the playlist's
                        name as its album, and album art as the playlist's
                        icon
  --playlist-retain-track-cover
                        Sets each track in a playlist to have the playlist's
                        name as its album, while retaining album art of each
                        track
  --scan-for-songs      Scan the output directory for existing files. This
                        option should be combined with the --overwrite option
                        to control how existing files are handled. (Output
                        directory is the last directory that is not a template
                        variable in the output template)
  --fetch-albums        Fetch all albums from songs in query
  --id3-separator ID3_SEPARATOR
                        Change the separator used in the id3 tags. Only
                        supported for mp3 files.
  --ytm-data            Use ytm data instead of spotify data when downloading
                        using ytm link.
  --add-unavailable     Add unavailable songs to the m3u/archive files when
                        downloading
  --generate-lrc        Generate lrc files for downloaded songs. Requires
                        `synced` provider to be present in the lyrics
                        providers list.
  --force-update-metadata
                        Force update metadata for songs that already have
                        metadata.
  --sync-without-deleting
                        Sync without deleting songs that are not in the query.
  --max-filename-length MAX_FILENAME_LENGTH
                        Max file name length. (This won't override the max
                        file name length enforced by the OS)
  --yt-dlp-args YT_DLP_ARGS
                        Arguments to pass to yt-dlp
  --detect-formats [{mp3,flac,ogg,opus,m4a,wav} ...]
                        Detect already downloaded songs with file format
                        different from the --format option (When combined with
                        --m3u option, only first detected format will be added
                        to m3u file)
  --redownload          to redownload the local song in diffrent format using
                        --format for meta operation
  --skip-album-art      skip downloading album art for meta operation
  --ignore-albums [IGNORE_ALBUMS ...]
                        ignores the song of the given albums
  --skip-explicit       Skip explicit songs
  --proxy PROXY         Http(s) proxy server for download song. Example:
                        http://host:port
  --create-skip-file    Create skip file for successfully downloaded file
  --respect-skip-file   If a file with the extension .skip exists, skip
                        download
  --sync-remove-lrc     Remove lrc files when using sync operation when
                        downloading songs

Web options:
  --host HOST           The host to use for the web server.
  --port PORT           The port to run the web server on.
  --keep-alive          Keep the web server alive even when no clients are
                        connected.
  --allowed-origins [ALLOWED_ORIGINS ...]
                        The allowed origins for the web server.
  --web-use-output-dir  Use the output directory instead of the session
                        directory for downloads. (This might cause issues if
                        you have multiple users using the web-ui at the same
                        time)
  --keep-sessions       Keep the session directory after the web server is
                        closed.
  --force-update-gui    Refresh the web server directory with a fresh git
                        checkout
  --web-gui-repo WEB_GUI_REPO
                        Custom web gui repo to use for the web server.
                        Example: https://github.com/spotdl/web-
                        ui/tree/master/dist
  --web-gui-location WEB_GUI_LOCATION
                        Path to the web gui directory to use for the web
                        server.
  --enable-tls          Enable TLS on the web server.
  --cert-file CERT_FILE
                        File Path to the TLS Certificate (PEM format).
  --key-file KEY_FILE   File Path to the TLS Private Key (PEM format).
  --ca-file CA_FILE     File Path to the TLS Certificate Authority File (PEM
                        format).

Misc options:
  --log-level {CRITICAL,FATAL,ERROR,WARN,WARNING,INFO,MATCH,DEBUG,NOTSET}
                        Select log level.
  --simple-tui          Use a simple tui.
  --log-format LOG_FORMAT
                        Custom logging format to use. More info: https://docs.
                        python.org/3/library/logging.html#logrecord-attributes

Other options:
  --download-ffmpeg     Download ffmpeg to spotdl directory.
  --generate-config     Generate a config file. This will overwrite current
                        config if present.
  --check-for-updates   Check for new version.
  --profile             Run in profile mode. Useful for debugging.
  --version, -v         Show the version number and exit.

For more information, visit http://spotdl.rtfd.io/ or join our Discord server:
https://discord.com/invite/xCa23pwJWY
